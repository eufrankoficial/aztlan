<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Http\Request;
use Illuminate\Notifications\Notifiable;
use Spatie\Sluggable\SlugOptions;

/**
 * Class BaseAuth.
 * @package App\Models.
 */
abstract class BaseAuthModel extends Authenticatable
{
    use Notifiable;

    /**
     * @var string.
     */
    protected $guard_name = 'web';

    /**
     * @var string.
     */
    protected $table = 'users';

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    /**
     * Get the options for generating the slug.
     */
    public function getSlugOptions() : SlugOptions
    {
        return SlugOptions::create()
            ->generateSlugsFrom($this->sourceSlug)
            ->saveSlugsTo('slug');
    }

    /**
     * @return bool|string.
     */
    public function getRouteKeyName()
    {
        if(!$this->keyName)
            return parent::getRouteKeyName(); // TODO: Change the autogenerated stub

        return $this->keyName;
    }

    /**
     * @param Builder $builder
     * @param $slug
     * @return Builder.
     */
    public function scopeSlug(Builder $builder, $slug)
    {
        return $builder->where('slug', $slug);
    }

    public function scopeFilter(Builder $builder, $request)
    {
        if($request->query->count() > 0)
            $builder = $this->search($builder, $request);

		if(current_user()->hasRole('SuperAdmin'))
			return $builder;

		$dataFilter = company();

		$builder->where('company_id', $dataFilter->id);

        return $builder;
    }

    /**
     * @param $value.
     */
    public function setPasswordAttribute($value)
    {
        $this->attributes['password'] = bcrypt($value);
    }

}
